services:
  db:
    image: postgres:15
    environment:
      POSTGRES_USER: scraper
      POSTGRES_PASSWORD: scraperpw
      POSTGRES_DB: scraperdb
    volumes:
      - pg_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U scraper -d scraperdb"]
      interval: 10s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: rabbitmq:3-management
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "5672:5672"   # AMQP port
      - "15672:15672" # Management UI
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3

  backend:
    build: .
    depends_on:
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    environment:
      DATABASE_URL: postgresql+asyncpg://scraper:scraperpw@db:5432/scraperdb
      RABBITMQ_URL: amqp://guest:guest@rabbitmq:5672/
      OPENAI_API_KEY: ${OPENAI_API_KEY:-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}
    ports:
      - "8000:8000"
    volumes:
      - ./companies.csv:/app/companies.csv:ro
      - ./logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

volumes:
  pg_data: